//plugins utilizados
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp' 

//version del proyecto
version = '1.0'
 

// Version JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7
 

def encoding = {it.encoding = 'UTF-8'}



//Repositorios
repositories{
    mavenCentral()
    mavenLocal()
}

configurations {
   all*.exclude group: 'javax.jms', module: 'jms'
   all*.exclude group: 'javax.mail', module: 'mail'
   all*.exclude group: 'com.sun.jdmk', module: 'jmxtools'
   all*.exclude group: 'com.sun.jmx', module: 'jmxri'
   //all*.exclude group: 'commons-logging', module: 'commons-logging'
   published
}


def SPRING_VERSION="3.0.1.RELEASE"
def SPRING_SECURITY_VERSION="3.0.1.RELEASE"
def TILES_VERSION="2.2.2"
def HIBERNATE_VERSION="3.5.0-Final"


dependencies{
	
    //Dependencias spring 
    compile 'org.springframework:spring-jdbc:'+SPRING_VERSION
    compile 'org.springframework:spring-webmvc:'+SPRING_VERSION
    compile 'org.springframework:spring-test:'+SPRING_VERSION
    compile 'org.springframework:spring-orm:'+SPRING_VERSION
    compile 'org.springframework:spring-tx:'+SPRING_VERSION
    compile ('org.springframework.security:spring-security-core:'+SPRING_SECURITY_VERSION){
    	exclude group: 'org.slf4j'
    }
    compile 'org.springframework.security:spring-security-web:'+SPRING_SECURITY_VERSION
    compile 'org.springframework.security:spring-security-config:'+SPRING_SECURITY_VERSION
	compile 'org.springframework.security:spring-security-taglibs:'+SPRING_SECURITY_VERSION
	
    
    //Dependencias hibernate
   
    compile 'org.hibernate:hibernate-entitymanager:'+HIBERNATE_VERSION
    compile ('org.hibernate:hibernate-validator:4.2.0.Final'){
    	exclude group: 'org.slf4j'
    	exclude group: 'javax.validation'
    }
    compile 'javax.validation:validation-api:1.1.0.Final'
    
    
    /* transitivas
    	compile ('org.hibernate:hibernate-core:'+HIBERNATE_VERSION){
    	exclude group: 'org.slf4j'
    }*/


    //Dependencias tiles
    compile 'org.apache.tiles:tiles-servlet:'+TILES_VERSION
    //transitivas
    compile 'org.apache.tiles:tiles-template:'+TILES_VERSION
    compile 'org.apache.tiles:tiles-api:'+TILES_VERSION
    compile 'org.apache.tiles:tiles-core:'+TILES_VERSION
    compile 'org.apache.tiles:tiles-jsp:'+TILES_VERSION
    
	
    compile 'javax.servlet:servlet-api:2.5'
    compile 'javax.servlet:jstl:1.2'
    compile 'org.slf4j:slf4j-log4j12:1.5.8'
    
    compile 'commons-beanutils:commons-beanutils:1.8.0'
    compile 'commons-digester:commons-digester:2.0'
    compile 'commons-dbcp:commons-dbcp:1.4'  
    compile 'mysql:mysql-connector-java:5.1.13'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.10'
	compile 'org.apache.poi:poi:3.6'
	//Librerias para testing
    compile ('junit:junit:4.12') {
    	exclude group: 'org.hamcrest'
    }
    compile 'org.hamcrest:hamcrest-library:1.3'
    //compile 'org.hamcrest:hamcrest-core:1.3'

    compile 'com.h2database:h2:1.4.186'

}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }               
}






eclipse {
  classpath {
              //minusConfigurations += [ configurations.compile ]
            }
  wtp {
    facet {
      facet name: 'wst.jsdt.web', version: '1.0'
      facet name: 'java', version: '1.7'
      file {
        withXml {
          
          def node2 = it.asNode()
          node2.appendNode('fixed', [facet:"wst.jsdt.web"])
           def node3 = it.asNode()
          node3.appendNode('fixed', [facet:"java"])
        }
        whenMerged { config -> 
          config.facets.each { 
            if (it.type.toString() == 'installed' && it.name == 'jst.web') { 
              it.version = 2.5 
            } 
          }
        } 
      }
    }
    component {
      contextPath = 'sivec'
      deployName = 'sivec'
    }
  }
}

task copyRuntimeLibs(type: Copy) {

into "src/main/webapp/WEB-INF/lib"

from configurations.compile

}



